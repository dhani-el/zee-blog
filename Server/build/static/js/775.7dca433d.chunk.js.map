{"version":3,"file":"static/js/775.7dca433d.chunk.js","mappings":"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","sources":["components/pagination.js","screens/Blogs-page/Blog.js"],"sourcesContent":["export default function Pagination({currentPage, previouse, next, updateCurse,updateLeave}) {\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            { currentPage <= 0 ? <div></div> : <button onClick={previouse} onMouseOver={updateCurse} onMouseLeave={updateLeave}>prev</button>}\r\n            <button onClick={next} onMouseOver={updateCurse} onMouseLeave={updateLeave}>next</button>\r\n        </div>\r\n    );\r\n}","import Bloglist from \"../../components/Bloglist/bloglist\";\r\nimport { useState, useEffect } from \"react\";\r\nimport searchBtn from \"../../images/searchbtn.png\";\r\nimport Footer from \"../../components/Footer\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Skeleton from \"../../components/Skeleton-Screens/Skeleton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchBlog, searchBlog } from \"../../actions/blogActions\";\r\nimport Pagination from \"../../components/pagination\";\r\nimport NavBar from \"../../components/Navbar/Navbar\";\r\nimport Circle from \"../../components/Circle\";\r\nimport \"./blog.css\";\r\nimport ErrorImage from \"../../components/404Image/404Image\";\r\n\r\nconst Blog = ({ updateCurse, updateLeave }) => {\r\n    let { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchBlog({ id }));\r\n    }, [dispatch, id]);\r\n\r\n    const blogs = useSelector((state) => state?.blogStore?.blogs);\r\n    const blogsData = useSelector((state) => state?.blogStore);\r\n\r\n    const { loading, error } = blogsData;\r\n\r\n    const searchedData = useSelector((state) => state?.searchBlog?.searched);\r\n    const searchedState = useSelector((state) => state?.searchBlog);\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const handleSearch = (e) => {\r\n        setSearchTerm(e.target.value);\r\n        dispatch(searchBlog({ searchTerm: `${searchTerm}` }));\r\n    }\r\n\r\n    function next() {\r\n        const nextId = Number(id) + 1\r\n        navigate(`/blogs/${nextId}`);\r\n    }\r\n    function previouse() {\r\n        const previouseId = Number(id) - 1\r\n        if (id <= 0) {\r\n            return\r\n        }\r\n        navigate(\"/blogs/\" + previouseId);\r\n    }\r\n\r\n    return (\r\n        <div className=\"blogs-container\">\r\n            <NavBar\r\n                updateCurse={updateCurse}\r\n                updateLeave={updateLeave}\r\n            />\r\n            <Circle />\r\n            <div className=\"sticky\">\r\n                <Footer \r\n                updateCurse={updateCurse}\r\n                updateLeave={updateLeave}\r\n                />\r\n            </div>\r\n            <div className=\"search-bar\">\r\n                <input onChange={handleSearch} placeholder=\"Search\" type=\"search\" />\r\n                <button>\r\n                    <img src={searchBtn} alt=\"search button\" />\r\n                </button>\r\n            </div>\r\n            {loading ? (\r\n                <Skeleton />\r\n            ) : error ? (\r\n                <ErrorImage/>\r\n            ) : (\r\n                <div className=\"bloglist-wrapper\">{blogs?.map((blog) => {\r\n                    return <Bloglist blog={blog} key={blog._id} updateCurse={updateCurse} updateLeave={updateLeave}/>\r\n                })}</div>\r\n            )}\r\n            <Pagination currentPage={id} next={next} previouse={previouse} updateCurse={updateCurse} updateLeave={updateLeave}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;"],"names":["Pagination","_ref","currentPage","previouse","next","updateCurse","updateLeave","_jsxs","className","children","_jsx","onClick","onMouseOver","onMouseLeave","id","useParams","navigate","useNavigate","dispatch","useDispatch","useEffect","fetchBlog","blogs","useSelector","state","_state$blogStore","blogStore","blogsData","loading","error","_useState","_state$searchBlog","searchBlog","searched","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","NavBar","Circle","Footer","onChange","e","target","value","concat","placeholder","type","src","alt","Skeleton","ErrorImage","map","blog","Bloglist","_id","nextId","Number","previouseId"],"sourceRoot":""}