{"version":3,"file":"static/js/610.12c4ce08.chunk.js","mappings":"iQAiDA,EAtCc,SAAHA,GAAoC,IAA/BC,EAAWD,EAAXC,YAAaC,EAAWF,EAAXE,YACnBC,GAAWC,EAAAA,EAAAA,MAMjB,IACIC,EANJ,WACI,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OAER,OAAOE,EAAAA,SAAc,kBAAM,IAAIC,gBAAgBH,EAAO,GAAE,CAACA,GAC7D,CACYI,GACKC,IAAI,SACrBC,EAAAA,EAAAA,YAAU,WACNC,OAAOC,SAAS,EAAG,GACnBX,GAASY,EAAAA,EAAAA,IAAWV,GACxB,GAAG,CAACF,EAAUE,IACd,IAAAW,GAAkCC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOH,UAAU,IAAlEI,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAASC,EAAKL,EAALK,MACxB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAChCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACHzB,YAAaA,EACbC,YAAaA,KAEjBuB,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KACHF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAEnB,KAC9BiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC1BJ,GAAWK,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,IAAa,OAALT,QAAK,IAALA,OAAK,EAALA,EAAOU,KAAI,SAACC,GACrC,OAAOL,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAACD,KAAMA,EAAsB7B,YAAaA,EAAaC,YAAaA,GAA9C,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAME,IAC5C,MAEHX,IAASI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAEH,KACpCI,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACHhC,YAAaA,EACbC,YAAaA,SAKjC,C","sources":["screens/Genre-page/genre.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport './genre.css';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchGenre } from \"../../actions/blogActions\";\r\nimport Skeleton from \"../../components/Skeleton-Screens/Skeleton\"\r\nimport Bloglist from \"../../components/Bloglist/bloglist\";\r\nimport Footer from \"../../components/Footer\";\r\nimport NavBar from \"../../components/Navbar/Navbar\";\r\nimport Circle from \"../../components/Circle\";\r\n\r\nconst Genre = ({updateCurse, updateLeave}) => {\r\n    const dispatch = useDispatch();\r\n    function useQuery() {\r\n        const { search } = useLocation();\r\n\r\n        return React.useMemo(() => new URLSearchParams(search), [search]);\r\n    }\r\n    let query = useQuery();\r\n    let name = query.get(\"name\");\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        dispatch(fetchGenre(name));\r\n    }, [dispatch, name]);\r\n    const { blogs, loading, error } = useSelector((state) => state?.fetchGenre);\r\n    return (\r\n        <div className=\"genre-container\">\r\n        <NavBar\r\n            updateCurse={updateCurse}\r\n            updateLeave={updateLeave}\r\n        />\r\n        <Circle/>\r\n            <h2 className=\"genre-header\">{name}</h2>\r\n            <div className=\"genre-container-2\">\r\n                <div className=\"genre-bloglist\">\r\n                    {loading ? (<Skeleton />) : (blogs?.map((blog) => {\r\n                        return <Bloglist blog={blog} key={blog?._id} updateCurse={updateCurse} updateLeave={updateLeave}/>\r\n                    }))}\r\n                </div>\r\n                {error && <div className=\"err-msg\">{error}</div>}\r\n                <Footer \r\n                    updateCurse={updateCurse}\r\n                    updateLeave={updateLeave}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Genre;"],"names":["_ref","updateCurse","updateLeave","dispatch","useDispatch","name","search","useLocation","React","URLSearchParams","useQuery","get","useEffect","window","scrollTo","fetchGenre","_useSelector","useSelector","state","blogs","loading","error","_jsxs","className","children","_jsx","NavBar","Circle","Skeleton","map","blog","Bloglist","_id","Footer"],"sourceRoot":""}